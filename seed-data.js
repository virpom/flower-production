const { MongoClient, ObjectId } = require('mongodb');
const bcrypt = require('bcryptjs');

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://floweradmin:flowerpassword@localhost:27017/flowerdb?authSource=admin';

async function seedDatabase() {
  const client = new MongoClient(MONGODB_URI);
  
  try {
    await client.connect();
    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    const db = client.db();
    
    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...');
    await db.collection('users').deleteMany({});
    await db.collection('categories').deleteMany({});
    await db.collection('subcategories').deleteMany({});
    await db.collection('products').deleteMany({});
    await db.collection('orders').deleteMany({});
    await db.collection('settings').deleteMany({});
    await db.collection('paymentsettings').deleteMany({});
    
    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    const adminPassword = await bcrypt.hash('admin123', 10);
    const userPassword = await bcrypt.hash('user12345', 10);
    
    const adminUser = {
      _id: new ObjectId(),
      username: 'admin',
      email: 'admin@flower-shop.ru',
      password: adminPassword,
      role: 'admin',
      createdAt: new Date(),
      updatedAt: new Date()
    };
    const regularUser = {
      _id: new ObjectId(),
      username: 'user',
      email: 'user@flower-shop.ru',
      password: userPassword,
      role: 'user',
      createdAt: new Date(),
      updatedAt: new Date()
    };
    
    await db.collection('users').insertMany([adminUser, regularUser]);
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    const categories = [
      { _id: new ObjectId(), name: '–ë—É–∫–µ—Ç—ã', slug: 'bukety', subcategories: [], createdAt: new Date(), updatedAt: new Date() },
      { _id: new ObjectId(), name: '–†–æ–∑—ã', slug: 'rozy', subcategories: [], createdAt: new Date(), updatedAt: new Date() }
    ];
    
    const categoryResult = await db.collection('categories').insertMany(categories);
    const categoryIds = Object.values(categoryResult.insertedIds);
    
    // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    const subcategories = [
      { _id: new ObjectId(), name: '–ë—É–∫–µ—Ç—ã –∏–∑ —Ä–æ–∑', slug: 'bukety-iz-roz', categoryId: categoryIds[0], description: '–†–æ—Å–∫–æ—à–Ω—ã–µ –±—É–∫–µ—Ç—ã –∏–∑ —Ä–æ–∑', image: '', isActive: true, createdAt: new Date(), updatedAt: new Date() },
      { _id: new ObjectId(), name: '–ö—Ä–∞—Å–Ω—ã–µ —Ä–æ–∑—ã', slug: 'krasnye-rozy', categoryId: categoryIds[1], description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –∫—Ä–∞—Å–Ω—ã–µ —Ä–æ–∑—ã', image: '', isActive: true, createdAt: new Date(), updatedAt: new Date() }
    ];
    
    const subcategoryResult = await db.collection('subcategories').insertMany(subcategories);
    const subcategoryIds = Object.values(subcategoryResult.insertedIds);
    
    // –ü—Ä–∏–≤—è–∑–∫–∞ subcategories –∫ categories (—Ç–æ–ª—å–∫–æ ObjectId)
    await db.collection('categories').updateOne({ _id: categoryIds[0] }, { $set: { subcategories: [subcategories[0]._id] } });
    await db.collection('categories').updateOne({ _id: categoryIds[1] }, { $set: { subcategories: [subcategories[1]._id] } });
    
    // –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    console.log('üåπ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...');
    const products = [
      {
        _id: new ObjectId(),
        name: '–ë—É–∫–µ—Ç "–†–æ–º–∞–Ω—Ç–∏–∫–∞"',
        price: 2500,
        categoryId: categoryIds[0],
        subcategoryId: subcategoryIds[0],
        image: '/uploads/romantika.jpg',
        description: '–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –±—É–∫–µ—Ç –∏–∑ 25 —Ä–æ–∑',
        inStock: true,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        _id: new ObjectId(),
        name: '–ö—Ä–∞—Å–Ω–∞—è —Ä–æ–∑–∞',
        price: 300,
        categoryId: categoryIds[1],
        subcategoryId: subcategoryIds[1],
        image: '/uploads/red-rose.jpg',
        description: '–û–¥–Ω–∞ –∫—Ä–∞—Å–Ω–∞—è —Ä–æ–∑–∞',
        inStock: true,
        createdAt: new Date(),
        updatedAt: new Date()
      }
    ];
    
    const productResult = await db.collection('products').insertMany(products);
    const productIds = Object.values(productResult.insertedIds);
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑—ã
    console.log('üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤...');
    const orders = [
      {
        orderNumber: '20240601-001',
        customer: {
          name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
          email: 'ivan@example.com',
          phone: '+7 (999) 123-45-67',
          address: '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 1, –∫–≤. 5'
        },
        items: [
          {
            productId: productIds[0],
            name: products[0].name,
            price: products[0].price,
            quantity: 1,
            image: products[0].image
          }
        ],
        totalAmount: 2500,
        status: 'pending',
        paymentStatus: 'pending',
        paymentMethod: 'cash',
        deliveryDate: new Date(Date.now() + 24 * 60 * 60 * 1000),
        deliveryTime: '14:00-16:00',
        notes: '–î–æ—Å—Ç–∞–≤–∏—Ç—å –∫ 14:00',
        createdAt: new Date(),
        updatedAt: new Date()
      }
    ];
    
    await db.collection('orders').insertMany(orders);
    
    // –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    console.log('‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    await db.collection('settings').insertOne({
      siteName: '–¶–≤–µ—Ç–æ—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω "–†–æ–∑–∞"',
      siteDescription: '–õ—É—á—à–∏–µ —Ü–≤–µ—Ç—ã –¥–ª—è –ª—é–±–æ–≥–æ —Å–ª—É—á–∞—è —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–æ –ú–æ—Å–∫–≤–µ',
      contactEmail: 'info@flower-shop.ru',
      contactPhone: '+7 (495) 123-45-67',
      address: '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¶–≤–µ—Ç–æ—á–Ω–∞—è, –¥. 1',
      workingHours: '–ü–Ω-–í—Å: 9:00-21:00',
      deliveryRadius: 15,
      minOrderAmount: 500,
      freeDeliveryThreshold: 2000,
      deliveryFee: 200,
      currency: 'RUB',
      timezone: 'Europe/Moscow',
      maintenanceMode: false,
      seoTitle: '–¶–≤–µ—Ç–æ—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω - –î–æ—Å—Ç–∞–≤–∫–∞ —Ü–≤–µ—Ç–æ–≤ –ø–æ –ú–æ—Å–∫–≤–µ',
      seoDescription: '–ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç—ã –∏ —Ü–≤–µ—Ç—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–æ –ú–æ—Å–∫–≤–µ. –ë–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä, –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞.',
      seoKeywords: '—Ü–≤–µ—Ç—ã, –±—É–∫–µ—Ç—ã, –¥–æ—Å—Ç–∞–≤–∫–∞ —Ü–≤–µ—Ç–æ–≤, —Ü–≤–µ—Ç–æ—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω, —Ä–æ–∑—ã, —Ç—é–ª—å–ø–∞–Ω—ã',
      socialLinks: {
        instagram: 'https://instagram.com/flower-shop',
        telegram: 'https://t.me/flower-shop',
        whatsapp: '+7 (999) 123-45-67'
      },
      createdAt: new Date(),
      updatedAt: new Date()
    });
    
    // –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
    console.log('üí≥ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–ª–∞—Ç–µ–∂–µ–π...');
    await db.collection('paymentsettings').insertOne({
      isEnabled: true,
      currency: 'RUB',
      stripe: {
        enabled: false,
        publishableKey: '',
        secretKey: '',
        webhookSecret: ''
      },
      yookassa: {
        enabled: false,
        shopId: '',
        secretKey: ''
      },
      sberbank: {
        enabled: false,
        merchantId: '',
        apiKey: ''
      },
      cashOnDelivery: {
        enabled: true,
        minAmount: 0,
        maxAmount: 50000
      },
      cardOnDelivery: {
        enabled: true,
        minAmount: 0,
        maxAmount: 100000
      },
      taxRate: 0,
      deliveryFee: 200,
      freeDeliveryThreshold: 2000,
      createdAt: new Date(),
      updatedAt: new Date()
    });
    
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –≤–∞–ª–∏–¥–Ω—ã–º–∏ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!');
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`   - –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`);
    console.log(`   - –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${subcategories.length}`);
    console.log(`   - –¢–æ–≤–∞—Ä–æ–≤: ${products.length}`);
    console.log(`   - –ó–∞–∫–∞–∑–æ–≤: ${orders.length}`);
    console.log(`   - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: 1`);
    console.log('\nüîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log(`   - –õ–æ–≥–∏–Ω: admin`);
    console.log(`   - –ü–∞—Ä–æ–ª—å: admin123`);
    console.log(`   - –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: user`);
    console.log(`   - –ü–∞—Ä–æ–ª—å: user12345`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await client.close();
  }
}

// –ó–∞–ø—É—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
seedDatabase(); 